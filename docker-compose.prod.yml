version: '3.8'

services:
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/brainybuddy/swistack_app-backend:latest}
    # Fallback to build if image not available
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - PORT=3001
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - swistack-network
    restart: unless-stopped

  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/brainybuddy/swistack_app-frontend:latest}
    # Fallback to build if image not available
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile.prod
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - swistack-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: swistack
      POSTGRES_USER: swistack
      POSTGRES_PASSWORD: swistack_prod_password
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - swistack-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - swistack-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minio123}
    command: server /data --console-address ":9001"
    volumes:
      - minio_prod_data:/data
    networks:
      - swistack-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_prod_data:
  redis_prod_data:
  minio_prod_data:

networks:
  swistack-network:
    driver: bridge