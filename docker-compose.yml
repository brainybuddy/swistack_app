version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./packages/backend:/app/packages/backend
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - swistack-network

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - swistack-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: swistack
      POSTGRES_USER: swistack
      POSTGRES_PASSWORD: swistack
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - swistack-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - swistack-network

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - swistack-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  swistack-network:
    driver: bridge